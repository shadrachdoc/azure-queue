trigger:
- aks

variables:
  dockerRegistryServiceConnection: 'ACR'
  imageRepository: 'sending-msg'
  imageRepositoryR: 'load-msg'
  containerRegistry: 'mypro543.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  dockerfilePathR: '**/load-msg/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'csacr5d93-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
stages:
 
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:


    - script: ls -ltr
      displayName: 'Run a one-line script'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - upload: manifests
      artifact: manifests

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryR)
        dockerfile: $(dockerfilePathR)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
- stage: Development
  displayName: Deploy to dev
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy to dev
    pool:
      vmImage: $(vmImageName)
    environment: 'dev.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/Deployment.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
                

          
